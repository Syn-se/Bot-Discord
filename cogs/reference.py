import discord
from discord.ext import commands
from utils.checks import only_market_channel

# ===========================================================
# Donn√©es de r√©f√©rence (tokens = base pour ITEM_ID ex: T5_<TOKEN>@2)
# ===========================================================

# Familles d'armes (EN -> FR)
WEAPON_FAMILIES = {
    "bows":              "Arcs",
    "swords":            "√âp√©es",
    "axes":              "Haches",
    "maces":             "Masses",
    "spears":            "Lances",
    "crossbows":         "Arbal√®tes",
    "daggers":           "Dagues",
    "hammers":           "Marteaux",
    "quarterstaves":     "Long b√¢ton",
    "fire_staffs":       "B√¢tons de feu",
    "frost_staffs":      "B√¢tons de glace",
    "cursed_staffs":     "B√¢tons maudits",
    "holy_staffs":       "B√¢tons b√©nis",
    "arcane_staffs":     "B√¢tons des arcanes",
    "nature_staffs":     "B√¢tons de nature",
}

# Mains droites (off-hands)
OFFHAND_FAMILIES = {
    "offhands": "Mains droites (combattant torche, combattant tome, combattant bouclier)",
}

# --- D√©tails par famille : (TOKEN EN, "Nom FR") ---

BOWS = [
    ("BOW",           "Arc"),
    ("WARBOW",        "Arc de guerre"),
    ("LONGBOW",       "Arc long"),
    ("WHISPERINGBOW", "Arc murmurant"),
    ("WAILINGBOW",    "Arc g√©missant"),
    ("BOWOFBADON",    "Arc de Badon"),
    ("MISTPIERCER",   "Perce-brume"),
    ("SKYSTRIDER",    "Arc marche-ciel"),
]

SWORDS = [
    ("BROADSWORD",    "√âp√©e large"),
    ("CLAYMORE",      "Claymore"),
    ("DUALSWORD",     "Doubles √©p√©es"),
    ("CLARENTBLADE",  "Lame de Clarent"),
    ("CARVING",       "√âp√©e tranchante"),
    ("KINGMAKER",     "Adoube-Roi"),
    ("GALATINEPAIR",  "Paires de galatines"),
    ("INFINITYBLADE", "Lame infinie"),
]

AXES = [
    ("AXE",             "Hache de guerre"),
    ("GREATAXE",        "Grande hache"),
    ("HALBERD",         "Hallebarde"),
    ("CARRIONCALLER",   "Mande-charogne"),
    ("INFERNALSCYTHE",  "Faux infernale"),
    ("REALMBREAKER",    "Brise-royaume"),
    ("CRYSTALREAPER",   "Faucheuse de cristal"),
    ("BEARPAWS",        "Patte d'ours"),
]

MACES = [
    ("MACE",              "Masse"),
    ("MORNINGSTAR",       "Morgenstern"),
    ("INCUBUSMACE",       "Masse d'incube"),
    ("CAMLANMACE",        "Masse de Camlann"),
    ("OATHKEEPERS",       "Gardes-serment"),
    ("DREADSTORMMONARCH", "Gardiens du serment"),
    ("HEAVYMACE",         "Masse lourde"),
    ("BEDROCKMACE",       "Masse du soubacement"),
]

SPEARS = [
    ("SPEAR",          "Lance"),
    ("PIKE",           "Pique"),
    ("GLAIVE",         "Glaive"),
    ("SPIRITHUNTER",   "Chassesprit"),
    ("TRINITYSPEAR",   "Lance de la Trinit√©"),
    ("DAYBREAKER",     "Diurnebris"),
    ("RIFTGLAIVE",     "Glaive d√©chirant"),
    ("HERONSPEAR",     "Lance de h√©ron"),
]

CROSSBOWS = [
    ("CROSSBOW",         "Arbal√®te"),
    ("LIGHTCROSSBOW",    "Arbal√®te l√©g√®re"),
    ("HEAVYCROSSBOW",    "Arbal√®te lourde"),
    ("WEEPINGREPEATER",  "Arbal√®te √† r√©p√©tition des larmes"),
    ("BOLTCASTERS",      "Lanceurs de foudre"),
    ("SIEGEBOW",         "Arc de si√®ge"),
    ("ENERGYSHAPER",     "Matrice d'√©nergie"),
    ("ARCLIGHTBLASTERS", "D√©sint√©grateurs de Lumi√®re"),
]

DAGGERS = [
    ("DAGGER",        "Dague"),
    ("DAGGERPAIR",    "Paire de dagues"),
    ("CLAWS",         "Griffes"),
    ("DEATHGIVERS",   "Sacrificateurs"),
    ("BLOODLETTER",   "Saigneur"),
    ("DEMONFANG",     "Croc-de-d√©mon"),
    ("BRIDLEDFURY",   "Brides-furie"),
    ("TWINSLAYERS",   "Jumelles tueuses"),
]

HAMMERS = [
    ("HAMMER",          "Marteau"),
    ("POLEHAMMER",      "Bec de corbin"),
    ("GREATHAMMER",     "Grand marteau"),
    ("TOMBHAMMER",      "Martel-tombe"),
    ("GROVEKEEPER",     "Gardien du bosquet"),
    ("HANDOFJUSTICE",   "Main de justice"),
    ("FORGEHAMMERS",    "Marteaux forg√©s"),
    ("TRUEBOLTHAMMER",  "Marteau de foudre"),
]

QUARTERSTAVES = [
    ("QUARTERSTAFF",          "Long b√¢ton"),
    ("IRONCLADSTAFF",         "B√¢ton sans faille"),
    ("DOUBLEBLADEDSTAFF",     "B√¢ton √† double tranchant"),
    ("BLACKMONKSTAFF",        "B√¢ton de moine noir"),
    ("SOULSCYTHE",            "Fauch√¢me"),
    ("STAFFOFBALANCE",        "B√¢ton d‚Äô√©quilibre"),
    ("GRAILSEEKER",           "Cherchegraal"),
    ("PHANTOMTWINBLADE",      "Lame double fant√¥me"),
]

FIRE_STAFFS = [
    ("FIRESTAFF",         "B√¢ton de feu"),
    ("GREATFIRESTAFF",    "Grand b√¢ton de feu"),
    ("WILDFIRESTAFF",     "B√¢ton braisier"),
    ("BRIMSTONESTAFF",    "B√¢ton sulfureux"),
    ("BLAZINGSTAFF",      "B√¢ton ardent"),
    ("FLAMEWALKER STAFF", "B√¢ton de Marcheflammes"),
    ("INFERNALSTAFF",     "B√¢ton infernal"),
    ("DAWNSONG",        "Chant de l‚Äôaube"),
]

FROST_STAFFS = [
    ("FROSTSTAFF",        "B√¢ton de givre"),
    ("GREATFROSTSTAFF",   "Grand b√¢ton de givre"),
    ("HOARFROSTSTAFF",    "B√¢ton de gel√©e blanche"),
    ("GLACIALSTAFF",      "B√¢ton glacial"),
    ("ICICLESTAFF",       "B√¢ton de stalactite"),
    ("PERMAFROSTPRISM",   "Prisme de perg√©lisol"),
    ("CHILLHOWL",         "Hurlegivre"),
    ("ARCTICSTAFF",       "B√¢ton arctique"),
]

CURSED_STAFFS = [
    ("CURSEDSTAFF",       "B√¢ton damn√©"),
    ("GREATCURSEDSTAFF",  "Grand b√¢ton damn√©"),
    ("LIFECURSESTAFF",    "B√¢ton de mal√©diction de vie"),
    ("DEMONICSTAFF",      "B√¢ton d√©moniaque"),
    ("DAMNATIONSTAFF",    "B√¢ton de la damnation"),
    ("SHADOWCALLER",      "Mande-t√©n√®bres"),
    ("CURSEDSKULL",       "Cr√¢ne damn√©"),
    ("ROTCALLER",         "B√¢ton de putr√©faction"),
]

HOLY_STAFFS = [
    ("HOLYSTAFF",        "Holy Staff",        "B√¢ton sacr√©"),
    ("GREATHOLYSTAFF",   "Great Holy Staff",  "Grand b√¢ton sacr√©"),
    ("DIVINESTAFF",      "Divine Staff",      "B√¢ton divin"),
    ("FALLENSTAFF",      "Fallen Staff",      "B√¢ton d√©chu"),
    ("LIFETOUCHSTAFF",   "Lifetouch Staff",   "B√¢ton du toucher de vie"),
    ("REDEEMER",         "Redemption Staff",  "B√¢ton de r√©demption"),
]

ARCANE_STAFFS = [
    ("ARCANESTAFF",       "Arcane Staff",        "B√¢ton des arcanes"),
    ("GREATARCANESTAFF",  "Great Arcane Staff",  "Grand b√¢ton des arcanes"),
    ("ENIGMATICSTAFF",    "Enigmatic Staff",     "B√¢ton √©nigmatique"),
    ("OCCULTSTAFF",       "Occult Staff",        "B√¢ton occulte"),
    ("WITCHWORKSTAFF",    "Witchwork Staff",     "B√¢ton de sorcellerie"),
    ("ECLIPSESTAFF",      "Evensong / Eclipse",  "Chant du soir / √âclipse"),
]

NATURE_STAFFS = [
    ("NATURESTAFF",       "Nature Staff",        "B√¢ton de nature"),
    ("GREATNATURESTAFF",  "Great Nature Staff",  "Grand b√¢ton de nature"),
    ("DRUIDICSTAFF",      "Druidic Staff",       "B√¢ton druidique"),
    ("BLIGHTSTAFF",       "Blight Staff",        "B√¢ton de fl√©au"),
    ("WILDSTAFF",         "Wild Staff",          "B√¢ton sauvage"),
    ("IRONROOTSTAFF",     "Ironroot Staff",      "B√¢ton racine de fer"),
]

# Mains droites (off-hands) ‚Äî tr√®s utilis√©es
OFFHANDS = [
    ("TORCH",           "Torch",              "Torche"),
    ("BOOK",            "Tome of Spells",     "Tome de sorts"),
    ("SHIELD",          "Shield",             "Bouclier"),
    ("MISTCALLER",      "Mistcaller",         "Appel des brumes"),
    ("LEERINGCANE",     "Leering Cane",       "Canne narquoise"),
    ("EYEOFSECRETS",    "Eye of Secrets",     "≈íil des secrets"),
    ("MUISAK",          "Muisak",             "Muisak"),
    ("TAPROOT",         "Taproot",            "Racine pivot"),
    ("CELESTIALCENSER", "Celestial Censer",   "Encensoir c√©leste"),
]

# Ressources (gros niveaux)
RESOURCES_OVERVIEW = [
    ("WOOD",   "Wood",      "Bois"),
    ("ORE",    "Ore",       "Minerai"),
    ("FIBER",  "Fiber",     "Fibre"),
    ("HIDE",   "Hide",      "Cuir brut"),
    ("STONE",  "Stone",     "Pierre"),
]

# D√©tails simples par ressource (base token -> FR)
WOOD = [("WOOD", "Wood", "Bois"), ("PLANKS", "Planks", "Planches")]
ORE  = [("ORE", "Ore", "Minerai"), ("METALBAR", "Metal Bar", "Lingots")]
FIBER= [("FIBER", "Fiber", "Fibre"), ("CLOTH", "Cloth", "Tissu")]
HIDE = [("HIDE", "Hide", "Peaux"), ("LEATHER", "Leather", "Cuir")]
STONE= [("STONE", "Stone", "Pierre"), ("STONEBLOCK", "Stone Block", "Bloc de pierre")]

QUALITY_MAP = [
    (1, "Normal"),
    (2, "Bon"),
    (3, "Exceptionnel"),
    (4, "Remarquable"),
    (5, "Chef-d‚Äô≈ìuvre (Formidable)"),
]

# ===========================================================
# Helpers
# ===========================================================

def _embed_pairs(title: str, pairs: list[tuple[str, str, str]], color=discord.Color.blurple()) -> discord.Embed:
    e = discord.Embed(title=title, color=color)
    for token, en, fr in pairs:
        e.add_field(name=token, value=f"**{en}** ‚Äî {fr}", inline=False)
    return e

# ===========================================================
# Cog
# ===========================================================

class Reference(commands.Cog):
    """Aides/mappings FR-EN pour les armes, off-hands, ressources et qualit√©s."""

    def __init__(self, bot: commands.Bot):
        self.bot = bot

    # ----- listes globales -----

    @commands.command(name="list_armes", help="Liste des familles d‚Äôarmes (EN ‚Üí FR).")
    @only_market_channel()
    async def list_armes(self, ctx: commands.Context):
        e = discord.Embed(title="üó°Ô∏è Familles d‚Äôarmes", color=discord.Color.green())
        for en, fr in WEAPON_FAMILIES.items():
            e.add_field(name=en, value=fr, inline=True)
        e.set_footer(text="Ex: !list_bow  |  Utilise les tokens pour !bestprice")
        await ctx.send(embed=e)

    @commands.command(name="list_offhands", help="Liste des mains droites (off-hands).")
    @only_market_channel()
    async def list_offhands(self, ctx: commands.Context):
        await ctx.send(embed=_embed_pairs("üõ°Ô∏è Off-hands ‚Äî tokens", OFFHANDS, color=discord.Color.gold()))

    @commands.command(name="list_resources", help="Liste des ressources principales.")
    @only_market_channel()
    async def list_resources(self, ctx: commands.Context):
        await ctx.send(embed=_embed_pairs("‚õèÔ∏è Ressources ‚Äî cat√©gories", RESOURCES_OVERVIEW, color=discord.Color.dark_gold()))

    @commands.command(name="list_quality", help="Liste des qualit√©s (1 ‚Üí 5).")
    @only_market_channel()
    async def list_quality(self, ctx: commands.Context):
        e = discord.Embed(title="‚≠ê Qualit√©s (Albion)", color=discord.Color.purple())
        for q, label in QUALITY_MAP:
            e.add_field(name=str(q), value=label, inline=True)
        e.set_footer(text="Qualit√© 5 = Chef-d‚Äô≈ìuvre (aussi appel√© Formidable)")
        await ctx.send(embed=e)

    # ----- armes : commandes d√©taill√©es -----

    @commands.command(name="list_bow", help="Arcs : token ‚Üí EN / FR.")
    @only_market_channel()
    async def list_bow(self, ctx):       await ctx.send(embed=_embed_pairs("üèπ Arcs ‚Äî tokens", BOWS))

    @commands.command(name="list_sword", help="√âp√©es : token ‚Üí EN / FR.")
    @only_market_channel()
    async def list_sword(self, ctx):     await ctx.send(embed=_embed_pairs("‚öîÔ∏è √âp√©es ‚Äî tokens", SWORDS))

    @commands.command(name="list_axe", help="Haches : token ‚Üí EN / FR.")
    @only_market_channel()
    async def list_axe(self, ctx):       await ctx.send(embed=_embed_pairs("ü™ì Haches ‚Äî tokens", AXES))

    @commands.command(name="list_mace", help="Masses : token ‚Üí EN / FR.")
    @only_market_channel()
    async def list_mace(self, ctx):      await ctx.send(embed=_embed_pairs("üî® Masses ‚Äî tokens", MACES))

    @commands.command(name="list_spear", help="Lances : token ‚Üí EN / FR.")
    @only_market_channel()
    async def list_spear(self, ctx):     await ctx.send(embed=_embed_pairs("ü™¨ Lances ‚Äî tokens", SPEARS))

    @commands.command(name="list_crossbow", help="Arbal√®tes : token ‚Üí EN / FR.")
    @only_market_channel()
    async def list_crossbow(self, ctx):  await ctx.send(embed=_embed_pairs("üèπ Arbal√®tes ‚Äî tokens", CROSSBOWS))

    @commands.command(name="list_dagger", help="Dagues : token ‚Üí EN / FR.")
    @only_market_channel()
    async def list_dagger(self, ctx):    await ctx.send(embed=_embed_pairs("üó°Ô∏è Dagues ‚Äî tokens", DAGGERS))

    @commands.command(name="list_hammer", help="Marteaux : token ‚Üí EN / FR.")
    @only_market_channel()
    async def list_hammer(self, ctx):    await ctx.send(embed=_embed_pairs("‚õèÔ∏è Marteaux ‚Äî tokens", HAMMERS))

    @commands.command(name="list_quarterstaff", help="B√¢tons de combat : token ‚Üí EN / FR.")
    @only_market_channel()
    async def list_quarterstaff(self, ctx): await ctx.send(embed=_embed_pairs("ü•¢ B√¢tons de combat ‚Äî tokens", QUARTERSTAVES))

    @commands.command(name="list_fire", help="B√¢tons de feu : token ‚Üí EN / FR.")
    @only_market_channel()
    async def list_fire(self, ctx):      await ctx.send(embed=_embed_pairs("üî• B√¢tons de feu ‚Äî tokens", FIRE_STAFFS))

    @commands.command(name="list_frost", help="B√¢tons de glace : token ‚Üí EN / FR.")
    @only_market_channel()
    async def list_frost(self, ctx):     await ctx.send(embed=_embed_pairs("‚ùÑÔ∏è B√¢tons de glace ‚Äî tokens", FROST_STAFFS))

    @commands.command(name="list_cursed", help="B√¢tons maudits : token ‚Üí EN / FR.")
    @only_market_channel()
    async def list_cursed(self, ctx):    await ctx.send(embed=_embed_pairs("üíÄ B√¢tons maudits ‚Äî tokens", CURSED_STAFFS))

    @commands.command(name="list_holy", help="B√¢tons sacr√©s : token ‚Üí EN / FR.")
    @only_market_channel()
    async def list_holy(self, ctx):      await ctx.send(embed=_embed_pairs("‚ú® B√¢tons sacr√©s ‚Äî tokens", HOLY_STAFFS))

    @commands.command(name="list_arcane", help="B√¢tons des arcanes : token ‚Üí EN / FR.")
    @only_market_channel()
    async def list_arcane(self, ctx):    await ctx.send(embed=_embed_pairs("üåÄ B√¢tons des arcanes ‚Äî tokens", ARCANE_STAFFS))

    @commands.command(name="list_nature", help="B√¢tons de nature : token ‚Üí EN / FR.")
    @only_market_channel()
    async def list_nature(self, ctx):    await ctx.send(embed=_embed_pairs("üåø B√¢tons de nature ‚Äî tokens", NATURE_STAFFS))

    # ----- ressources d√©taill√©es -----

    @commands.command(name="list_wood", help="Ressources bois : token ‚Üí EN / FR.")
    @only_market_channel()
    async def list_wood(self, ctx):      await ctx.send(embed=_embed_pairs("üå≤ Bois ‚Äî tokens", WOOD, color=discord.Color.dark_green()))

    @commands.command(name="list_ore", help="Ressources minerai : token ‚Üí EN / FR.")
    @only_market_channel()
    async def list_ore(self, ctx):       await ctx.send(embed=_embed_pairs("‚õèÔ∏è Minerai ‚Äî tokens", ORE, color=discord.Color.dark_gray()))

    @commands.command(name="list_fiber", help="Ressources fibre : token ‚Üí EN / FR.")
    @only_market_channel()
    async def list_fiber(self, ctx):     await ctx.send(embed=_embed_pairs("ü™µ Fibre ‚Äî tokens", FIBER, color=discord.Color.teal()))

    @commands.command(name="list_hide", help="Ressources peaux/cuir : token ‚Üí EN / FR.")
    @only_market_channel()
    async def list_hide(self, ctx):      await ctx.send(embed=_embed_pairs("üêæ Peaux & cuir ‚Äî tokens", HIDE, color=discord.Color.dark_orange()))

    @commands.command(name="list_stone", help="Ressources pierre : token ‚Üí EN / FR.")
    @only_market_channel()
    async def list_stone(self, ctx):     await ctx.send(embed=_embed_pairs("ü™® Pierre ‚Äî tokens", STONE, color=discord.Color.light_gray()))

async def setup(bot: commands.Bot):
    await bot.add_cog(Reference(bot))
